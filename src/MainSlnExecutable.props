<Project>
	<Import Project="MainSlnCommon.props" />
	<PropertyGroup>
		<AssemblyTitle>$(Description)</AssemblyTitle>
		<!-- Output path will contain the executable along with all its dependencies. We copy the dependencies into /dll later -->
		<OutputPath>$(MSBuildProjectDirectory)/../../output/</OutputPath>
		<Product>$(MSBuildProjectName.Substring($([MSBuild]::Add($(MSBuildProjectName.LastIndexOf('.')), 1))))</Product>
		<!-- Setting TargetFileName does not change the AssemblyName (as setting TargetName would), but also does not change the output file name
			for the executable on build (as one would expect). So we still need to rename the executable file below. Using this method has the advantage
			of IDEs respecting the TargetFileName and expecting it. -->
		<TargetFileName>$(Product).exe</TargetFileName>
	</PropertyGroup>
	<ItemGroup>
		<!-- This is somewhat wasteful for DiscoHawk, but it still relies on some unmanaged libraries
			Note that LinkBase is simply something added to OutputPath, it doesn't replace it -->
		<None Include="$(MSBuildProjectDirectory)/../../Assets/**/*.*" LinkBase="." CopyToOutputDirectory="PreserveNewest" />
	</ItemGroup>
	<PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
		<OutputType>Exe</OutputType>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
		<OutputType>WinExe</OutputType>
	</PropertyGroup>
	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
		<ItemGroup>
			<NotExecFilesFromExecProj Include="$(OutputPath)*.dll" Exclude="$(OutputPath)BizHawk.Client.EmuHawk.dll;$(OutputPath)BizHawk.Client.DiscoHawk.dll" />
			<NotExecFilesFromExecProj Include="$(OutputPath)*.xml" Exclude="$(OutputPath)BizHawk.Client.EmuHawk.xml;$(OutputPath)BizHawk.Client.DiscoHawk.xml" />
		</ItemGroup>
		<Move SourceFiles="@(NotExecFilesFromExecProj)" DestinationFolder="$(OutputPath)dll/" />
		<MakeDir Directories="$(OutputPath)ExternalTools;$(OutputPath)Firmware;$(OutputPath)Tools" />
	</Target>
</Project>
